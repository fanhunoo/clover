<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fanhunoo.clover.dao.StockDao">
    <resultMap id="storageLog" type="com.fanhunoo.clover.entity.StorageLog">
        <result property="beforeStorageBatchId" column="BEFORE_STORAGE_BATCH_ID"/>
        <result property="code" column="CODE"/>
        <result property="id" column="ID"/>
        <result property="operateTime" column="OPERATE_TIME"/>
        <result property="operator" column="OPERATOR"/>
        <result property="quantity" column="QUANTITY"/>
        <result property="resourceCode" column="RESOURCE_CODE"/>
        <result property="resourceName" column="RESOURCE_NAME"/>
        <result property="salePrice" column="SALE_PRICE"/>
        <result property="siteCode" column="SITE_CODE"/>
        <result property="siteName" column="SITE_NAME"/>
        <result property="storageBatchId" column="STORAGE_BATCH_ID"/>
        <result property="updatePer" column="UPDATE_PER"/>
        <result property="updateTime" column="UPDATE_TIME"/>
    </resultMap>

    <resultMap id="commodityDetail" type="com.fanhunoo.clover.entity.CommodityDetail">
        <result property="beforeCode" column="BEFORE_CODE"/>
        <result property="code" column="CODE"/>
        <result property="id" column="ID"/>
        <result property="image" column="IMAGE"/>
        <result property="moveBatchId" column="MOVE_BATCH_ID"/>
        <result property="name" column="NAME"/>
        <result property="nameCode" column="NAME_CODE"/>
        <result property="offsaleBatchId" column="OFFSALE_BATCH_ID"/>
        <result property="onsaleBatchId" column="ONSALE_BATCH_ID"/>
        <result property="purchasePrice" column="PURCHASE_PRICE"/>
        <result property="remake" column="REMAKE"/>
        <result property="resourceCode" column="RESOURCE_CODE"/>
        <result property="resourceName" column="RESOURCE_NAME"/>
        <result property="salePrice" column="SALE_PRICE"/>
        <result property="season" column="SEASON"/>
        <result property="sex" column="SEX"/>
        <result property="siteCode" column="SITE_CODE"/>
        <result property="siteName" column="SITE_NAME"/>
        <result property="sizeType" column="SIZE_TYPE"/>
        <result property="sortId" column="SORT_ID"/>
        <result property="status" column="STATUS"/>
        <result property="storageBatchId" column="STORAGE_BATCH_ID"/>
        <result property="storagePer" column="STORAGE_PER"/>
        <result property="storageTime" column="STORAGE_TIME"/>
        <result property="updatePer" column="UPDATE_PER"/>
        <result property="updateTime" column="UPDATE_TIME"/>

    </resultMap>
    <!--获取类型编码序列-->
    <select id="getStockTypeSeq" resultType="int">
        SELECT seq_stock_type.nextval FROM dual
    </select>

    <!--根据名称编码物理删除库存信息-->
    <delete id="deleteStorageLog" parameterType="java.lang.String">
        DELETE T_STORAGE_LOG WHERE NAME_CODE = #{nameCode}
    </delete>

    <!--根据名称编码物理删除库存信息-->
    <delete id="deleteCommodityDetail" parameterType="java.lang.String">
        DELETE T_COMMODITY_DETAIL WHERE CODE = #{nameCode}
    </delete>

    <!--插入入库记录表-->
    <insert id="saveStorageLog" parameterType="com.fanhunoo.clover.entity.vo.StockVo">
        <selectKey keyProperty="id" order="BEFORE" resultType="string">
            SELECT SEQ_STORAGE_LOG.NEXTVAL id from dual
        </selectKey>
        INSERT INTO T_STORAGE_LOG(
        ID,
        STORAGE_BATCH_ID,
        CODE,
        QUANTITY,
        OPERATOR,
        OPERATE_TIME,
        SALE_PRICE,
        RESOURCE_CODE,
        RESOURCE_NAME,
        SITE_CODE,
        SITE_NAME,
        UPDATE_TIME,
        UPDATE_PER)
        VALUES (
        #{id,jdbcType=VARCHAR},
        #{storageBatchId,jdbcType=VARCHAR},
        #{code,jdbcType=VARCHAR},
        #{jianshu,jdbcType=INTEGER},
        #{operator,jdbcType=VARCHAR},
        sysdate,
        #{salePrice,jdbcType=DECIMAL},
        #{resourceCode,jdbcType=VARCHAR},
        #{resourceName,jdbcType=VARCHAR},
        #{siteCode,jdbcType=VARCHAR},
        #{siteName,jdbcType=VARCHAR},
        sysdate,
        #{operator,jdbcType=VARCHAR}
        )
    </insert>

    <!--插入商品信息-->
    <insert id="saveCommodityDetail" parameterType="com.fanhunoo.clover.entity.CommodityDetail">
        <selectKey keyProperty="id" order="BEFORE" resultType="string">
            SELECT SEQ_COMMODITY_DETAIL.NEXTVAL id from dual
        </selectKey>
        INSERT INTO T_COMMODITY_DETAIL(ID,NAME,CODE,SALE_PRICE,SEASON,SIZE_TYPE,SEX,STATUS,RESOURCE_CODE,RESOURCE_NAME,STORAGE_TIME,STORAGE_PER,STORAGE_BATCH_ID,SORT_ID,SITE_CODE,SITE_NAME,REMAKE,UPDATE_TIME,UPDATE_PER,PURCHASE_PRICE,IMAGE,BEFORE_CODE)
        VALUES (#{id},#{name},#{code},#{salePrice},#{season},#{sizeType},#{sex},#{status},#{resourceCode},#{resourceName},#{storageTime},#{storagePer},#{storageBatchId},#{sortId},#{siteCode},#{siteName},#{remake},#{updateTime},#{updatePer},#{purchasePrice},#{image},#{beforeCode})
    </insert>

    <!--批量插入商品信息-->
    <insert id="saveCommodityDetailList" parameterType="java.util.List">
        INSERT INTO T_COMMODITY_DETAIL(
        ID,
        NAME,
        NAME_CODE,
        CODE,
        SALE_PRICE,
        SEASON,
        SIZE_TYPE,
        SEX,
        STATUS,
        RESOURCE_CODE,
        RESOURCE_NAME,
        STORAGE_TIME,
        STORAGE_PER,
        STORAGE_BATCH_ID,
        SORT_ID,
        SITE_CODE,
        SITE_NAME,
        REMAKE,
        UPDATE_TIME,
        UPDATE_PER,
        PURCHASE_PRICE,
        IMAGE,
        BEFORE_CODE
        )
        select SEQ_COMMODITY_DETAIL.NEXTVAL,A.* FROM (
        <foreach collection="list" item="item" index="index" separator="UNION ALL">
            SELECT
            #{item.name,jdbcType=VARCHAR},
            #{item.nameCode,jdbcType=VARCHAR},
            #{item.code,jdbcType=VARCHAR},
            #{item.salePrice,jdbcType=DECIMAL},
            #{item.season,jdbcType=VARCHAR},
            #{item.sizeType,jdbcType=VARCHAR},
            #{item.sex,jdbcType=VARCHAR},
            #{item.status,jdbcType=INTEGER},
            #{item.resourceCode,jdbcType=VARCHAR},
            #{item.resourceName,jdbcType=VARCHAR},
            #{item.storageTime,jdbcType=TIMESTAMP },
            #{item.storagePer,jdbcType=VARCHAR},
            #{item.storageBatchId,jdbcType=VARCHAR},
            #{item.sortId,jdbcType=INTEGER},
            #{item.siteCode,jdbcType=VARCHAR},
            #{item.siteName,jdbcType=VARCHAR},
            #{item.remake,jdbcType=VARCHAR},
            #{item.updateTime,jdbcType=TIMESTAMP },
            #{item.updatePer,jdbcType=VARCHAR},
            #{item.purchasePrice,jdbcType=VARCHAR},
            #{item.image,jdbcType=VARCHAR},
            #{item.beforeCode,jdbcType=VARCHAR}
            FROM dual
        </foreach>
        ) A
    </insert>

    <!--查询商品信息-->
    <select id="selectStock" resultMap="commodityDetail" parameterType="java.util.Map">
        SELECT * FROM T_COMMODITY_DETAIL
        <where>
            <if test='storageBatchId!=null and storageBatchId!=""'>
                and STORAGE_BATCH_ID = #{storageBatchId}
            </if>
            <if test='status!=null and status!=""'>
                and STATUS = #{status}
            </if>
            <if test='season!=null and season!=""'>
                and SEASON = #{season}
            </if>
            <if test='resourceCode!=null and resourceCode!=""'>
                and RESOURCE_CODE = #{resourceCode}
            </if>
            <if test='onsaleBatchId!=null and onsaleBatchId!=""'>
                and ONSALE_BATCH_ID = #{onsaleBatchId}
            </if>
            <if test='id!=null and id!=""'>
                and ID = #{id}
            </if>
            <if test='code!=null and code!=""'>
                and CODE = #{code}
            </if>
            <if test='siteCode!=null and siteCode!=""'>
                and SITE_CODE = #{siteCode}
            </if>
            <if test='nameCode!=null and nameCode!=""'>
                and NAME_CODE = #{nameCode}
            </if>


            <if test='nameLike!=null and nameLike!=""'>
                and NAME LIKE '%' || #{nameLike} || '%'
            </if>
            <if test='containStoraged =="N"'>
                and STATUS != 100
            </if>
        </where>
        ORDER BY STORAGE_BATCH_ID,NAME_CODE,SORT_ID
    </select>

    <!--插入上架记录表-->
    <insert id="saveOnSaleLog" parameterType="java.util.Map">
        <selectKey keyProperty="id" order="BEFORE" resultType="string">
            SELECT SEQ_ONSALE_LOG.NEXTVAL id from dual
        </selectKey>
        INSERT INTO T_ONSALE_LOG (
        ID,ONSALE_BATCH_ID,QUANTITY,
        RESOURCE_CODE,RESOURCE_NAME,ORG_ID,
        ONSALE_PER,ONSALE_TIME,CHECK_TIME,
        CHECK_PER,CHECK_STATUS
        ) VALUES  (
        #{id,jdbcType=VARCHAR},#{onsaleBatchId,jdbcType=VARCHAR},#{quantity,jdbcType=INTEGER},
        #{resourceCode,jdbcType=VARCHAR},#{resourceName,jdbcType=VARCHAR},#{orgId,jdbcType=VARCHAR},
        #{onsalePer,jdbcType=VARCHAR},sysdate,#{checkTime,jdbcType=TIMESTAMP},
        #{checkPer,jdbcType=VARCHAR},#{checkStatus,jdbcType=INTEGER}
        )
    </insert>

    <!--插入下架记录表-->
    <insert id="saveOffSaleLog" parameterType="java.util.Map">
        <selectKey keyProperty="id" order="BEFORE" resultType="string">
            SELECT SEQ_OFFSALE_LOG.NEXTVAL id from dual
        </selectKey>
        INSERT INTO T_OFFSALE_LOG (
        ID,OFFSALE_BATCH_ID,QUANTITY,ORG_ID,OFFSALE_PER,OFFSALE_TIME,CHECK_TIME,CHECK_PER,CHECK_STATUS
        ) VALUES  (
        #{id,jdbcType=VARCHAR},#{offsaleBatchId,jdbcType=VARCHAR},#{quantity,jdbcType=INTEGER},#{orgId,jdbcType=VARCHAR},
        #{offsalePer,jdbcType=VARCHAR},sysdate,#{checkTime,jdbcType=TIMESTAMP},#{checkPer,jdbcType=VARCHAR},#{checkStatus,jdbcType=INTEGER}
        )
    </insert>

    <!--插入转移记录表-->
    <insert id="saveMoveLog" parameterType="java.util.Map">
        <selectKey keyProperty="id" order="BEFORE" resultType="string">
            SELECT SEQ_MOVE_LOG.NEXTVAL id from dual
        </selectKey>
        INSERT INTO T_MOVE_LOG (
        ID,MOVE_BATCH_ID,QUANTITY,RESOURCE_CODE,RESOURCE_NAME,TARGET_CODE,TARGET_NAME,MOVE_PER,MOVE_TIME,CHECK_TIME,CHECK_PER,CHECK_STATUS
        ) VALUES  (
        #{id,jdbcType=VARCHAR},#{moveBatchId,jdbcType=VARCHAR},#{quantity,jdbcType=INTEGER},#{resourceCode,jdbcType=VARCHAR},
        #{resourceName,jdbcType=VARCHAR},#{targetCode,jdbcType=VARCHAR},#{targetName,jdbcType=VARCHAR},
        #{movePer,jdbcType=VARCHAR},sysdate,#{checkTime,jdbcType=TIMESTAMP},#{checkPer,jdbcType=VARCHAR},#{checkStatus,jdbcType=INTEGER}
        )
    </insert>

    <update id="updateCommodityDetailList" parameterType="java.util.Map">
        UPDATE T_COMMODITY_DETAIL
        SET
          <if test='siteCode!=null and siteCode!=""'>
            SITE_CODE = #{siteCode},
          </if>
          <if test='siteName!=null and siteName!=""'>
            SITE_NAME = #{siteName},
          </if>
          <if test='onsaleBatchId!=null and onsaleBatchId!=""'>
            ONSALE_BATCH_ID = #{onsaleBatchId},
          </if>
          <if test='offsaleBatchId!=null and offsaleBatchId!=""'>
            OFFSALE_BATCH_ID = #{offsaleBatchId},
          </if>
          <if test='moveBatchId!=null and moveBatchId!=""'>
            MOVE_BATCH_ID = #{moveBatchId},
          </if>
          <if test='status!=null and status!=""'>
              STATUS = #{status},
          </if>
          UPDATE_TIME = sysdate,
          UPDATE_PER = #{updatePer}
        WHERE STATUS = #{statusBefore} AND CODE IN (
        <foreach collection="codes" item="item" index="index" separator=",">
            #{item}
        </foreach>
        )
    </update>

</mapper>